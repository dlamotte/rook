package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetVolumeAttachmentParams creates a new GetVolumeAttachmentParams object
// with the default values initialized.
func NewGetVolumeAttachmentParams() GetVolumeAttachmentParams {
	var ()
	return GetVolumeAttachmentParams{}
}

// GetVolumeAttachmentParams contains all the bound params for the get volume attachment operation
// typically these are obtained from a http.Request
//
// swagger:parameters getVolumeAttachment
type GetVolumeAttachmentParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request

	/*
	  Required: true
	  In: path
	*/
	AttachmentID string
	/*
	  Required: true
	  In: path
	*/
	ClusterID string
	/*
	  Required: true
	  In: path
	*/
	PoolID string
	/*
	  Required: true
	  In: path
	*/
	VolumeID string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls
func (o *GetVolumeAttachmentParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error
	o.HTTPRequest = r

	rAttachmentID, rhkAttachmentID, _ := route.Params.GetOK("attachmentID")
	if err := o.bindAttachmentID(rAttachmentID, rhkAttachmentID, route.Formats); err != nil {
		res = append(res, err)
	}

	rClusterID, rhkClusterID, _ := route.Params.GetOK("clusterID")
	if err := o.bindClusterID(rClusterID, rhkClusterID, route.Formats); err != nil {
		res = append(res, err)
	}

	rPoolID, rhkPoolID, _ := route.Params.GetOK("poolID")
	if err := o.bindPoolID(rPoolID, rhkPoolID, route.Formats); err != nil {
		res = append(res, err)
	}

	rVolumeID, rhkVolumeID, _ := route.Params.GetOK("volumeID")
	if err := o.bindVolumeID(rVolumeID, rhkVolumeID, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetVolumeAttachmentParams) bindAttachmentID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.AttachmentID = raw

	return nil
}

func (o *GetVolumeAttachmentParams) bindClusterID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.ClusterID = raw

	return nil
}

func (o *GetVolumeAttachmentParams) bindPoolID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.PoolID = raw

	return nil
}

func (o *GetVolumeAttachmentParams) bindVolumeID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.VolumeID = raw

	return nil
}
